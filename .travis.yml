# for setup: must go into travis setup and insert ip address and other data of
# the redpitaya device, and disable concurrent builds to avoid conflicts
# between tests of different python versions

# lots of stuff here comes from https://gist.github.com/dan-blanchard/7045057

env:
- DISPLAY=:99.0

language: python
# nosetests is only executed for 2.7, 3.5 and 3.6, but we still test the
# installation for other python versions (3.4)
python:
  - "2.7"
  - "3.6"
  - "3.5"
  - "3.4"

notifications:
  email: false

before_install:
  - sudo apt-get update
  # install portaudio since this is a requirement for pyaudio
  - sudo apt-get install portaudio19-dev
  # We do this conditionally because it saves us some downloading.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - chmod +x miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # The next lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
  - sudo rm -rf /dev/shm
  - sudo ln -s /run/shm /dev/shm
  # starts gui support, see https://docs.travis-ci.com/user/gui-and-headless-browsers/
  - sh -e /etc/init.d/xvfb start
  # give it some time to start
  - sleep 3

install:
  # avoid to get cancelled because of very long tests
  # we get issues with building numpy etc if we do not include those in the next line
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy
  - source activate test-environment
  - conda install --yes -c conda-forge coveralls
  - python setup.py install
  # packages for coverage reports
  - pip install coverage codecov

# Run test
script:
  - nosetests

after_script:
  - codecov

# automatic release when a new tag is created needs a few preliminary steps...
# create a Readme.rst for PyPI
before_deploy:
  - source activate test-environment
  - conda install pandoc
  - pandoc --from=markdown --to=rst --output=README.rst README.md

deploy:
  provider: pypi
  user: lneuhaus
  password: $PYPI_PASSWORD
  skip_cleanup: true
  on:
    tags: true
  # distributions: "sdist bdist_wheel"
  distributions: "sdist bdist_wheel --universal"
